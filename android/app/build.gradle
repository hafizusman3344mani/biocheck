def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

//def keystorePropertiesFile = rootProject.file("key.properties")
//def keystoreProperties = new Properties()
//keystoreProperties.load(new FileInputStream(keystorePropertiesFile))


android {
    compileSdkVersion 30

    lintOptions {
        disable 'InvalidPackage'
        checkReleaseBuilds false
    }
//    signingConfigs {
//        release {
//            keyAlias keystoreProperties['keyAlias']
//            keyPassword keystoreProperties['keyPassword']
//            storeFile file(keystoreProperties['storeFile'])
//            storePassword keystoreProperties['storePassword']
//        }
//    }
    defaultConfig {
        applicationId "com.tekdhaba.biocheck"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName '0.0.1'
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            useProguard true
            minifyEnabled false
            shrinkResources false
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
            applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "${"biocheck"}-${variant.versionName}.apk"
                }
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    ndkVersion "21.0.6113669"

//    flavorDimensions "flavor-type"
//    productFlavors{
//        development{
//            dimension "flavor-type"
//        }
//        staging{
//            dimension "flavor-type"
//        }
//        production{
//            dimension "flavor-type"
//        }
//    }

}

flutter {
    source '../..'
}


dependencies {
    implementation 'com.google.code.gson:gson:2.8.6'
   // implementation files('libs/polar-ble-sdk.aar')
    //implementation files('libs/polar-protobuf-release.aar')
    //implementation 'com.google.protobuf:protobuf-java:3.14.0'
    implementation 'io.reactivex.rxjava3:rxjava:3.0.0'
    implementation 'commons-io:commons-io:2.8.0'
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    implementation 'com.github.bosphere.android-filelogger:filelogger:1.0.7'
    implementation 'org.jetbrains:annotations:15.0'
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}